plugins {
	id 'org.springframework.boot' version '2.4.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "7.9.1"
	id 'jacoco'
	id 'com.bmuschko.docker-remote-api' version '7.0.0'
}

group = 'br.com.unicred'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

springBoot {
	buildInfo()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.zaxxer:HikariCP'
	implementation 'org.flywaydb:flyway-core'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

var dockerImagem = "antoniogeroncio/" + project.name + ":" + project.version

task dockerBuildImagem(type: DockerBuildImage) {
	copy {
		from 'devops/docker'
		into "build"
	}
	inputDir = file('build')
	images.add(dockerImagem)
}

task dockerPushImage(type: Exec) {
	commandLine "docker", "push", dockerImagem
}